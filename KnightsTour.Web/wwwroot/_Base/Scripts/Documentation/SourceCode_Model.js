SourceCode_Model = [{"Namespace":"KnightsTour","FileName":"BoardBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Board\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"BoardBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"BoardBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"BoardBase","Inheritance":null,"Description":"Initializes a new empty instance of the BoardBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"BoardBase","Inheritance":null,"Description":"Initializes a new empty instance of the BoardBase class from the record in a data reader populating only the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.BoardProperty>"}],"SeeAlso":null},{"Name":"BoardBase","Inheritance":null,"Description":"Initializes a new empty instance of the BoardBase class from a DataRow with the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.BoardProperty>"}],"SeeAlso":null},{"Name":"BoardBase","Inheritance":null,"Description":"Initializes a new empty instance of the BoardBase class from a DataRow with the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardLite","Value":"BoardLite"}],"SeeAlso":null},{"Name":"BoardBase","Inheritance":null,"Description":"Initializes a new empty instance of the BoardBase class from a DataRow with the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.BoardProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_board","Inheritance":null,"Description":"Private Board (by SourceBoardId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.Board","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_boards","Inheritance":null,"Description":"Private collection of child boards references (by SourceBoardId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.Board>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_puzzles","Inheritance":null,"Description":"Private collection of child puzzles references (by BoardId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.Puzzle>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Board","Inheritance":null,"Description":"Gets or sets the related Board (by SourceBoardId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.Board","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Boards","Inheritance":null,"Description":"Gets or sets the collection of child boards references (by SourceBoardId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.Board>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Puzzles","Inheritance":null,"Description":"Gets or sets the collection of child puzzles references (by BoardId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.Puzzle>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.BoardProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"BoardLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this Board instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DiscoveryDateFormatted","Inheritance":null,"Description":"Returns the DiscoveryDate formatted with either the projects default date format or the custom property date format if defined.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"Board","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.BoardProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.BoardProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardLite","Value":"BoardLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"BoardBase","Inheritance":"BoardLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The BoardBase class which tightly binds the model to the object.  Inherits <seealso cref=\"BoardLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"Board\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Board\\","References":["System","System.Xml"],"Constructors":[{"Name":"BoardLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"BoardLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"BoardLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"BoardLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardBase","Value":"BoardBase"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"_boardLite","Inheritance":null,"Description":"Private Board (by SourceBoardId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.BoardLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Board","Inheritance":null,"Description":"Gets or sets the related BoardLite (by SourceBoardId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.BoardLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"BoardId","Inheritance":null,"Description":"Gets or sets the primary key field board id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"BoardCode","Inheritance":null,"Description":"Gets or sets the board code.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"Guid","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RowDimension","Inheritance":null,"Description":"Gets or sets the row dimension.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"ColDimension","Inheritance":null,"Description":"Gets or sets the col dimension.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DiscoveryDate","Inheritance":null,"Description":"Gets or sets the discovery date.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"DateTime","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Author","Inheritance":null,"Description":"Gets or sets the author.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DiscoveryIterationCount","Inheritance":null,"Description":"Gets or sets the discovery iteration count.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"long","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DiscoveryRandomness","Inheritance":null,"Description":"Gets or sets the discovery randomness.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Path","Inheritance":null,"Description":"Gets or sets the path.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SourceBoardId","Inheritance":null,"Description":"Gets or sets the source board id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"BoardLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"BoardLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The BoardLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"BoardLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Board\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"BoardValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"BoardValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"BoardValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the Board entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Board\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"Board\" /> to its <seealso cref=\"BoardLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"BoardLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"board","Value":"this Board"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"Board\" /> to their <seealso cref=\"BoardLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<BoardLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boards","Value":"this IEnumerable<Board>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"BoardLite\" /> to its <seealso cref=\"Board\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Board","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardLite","Value":"this BoardLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"BoardLite\" /> to their <seealso cref=\"Board\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<Board>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardLites","Value":"this IEnumerable<BoardLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The BoardLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Board\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"BoardLogicBase","Inheritance":"base(Enumerations.EntityName.Board, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["BoardLogicBase BoardLogic = new BoardLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"BoardLogicBase","Inheritance":"base(Enumerations.EntityName.Board, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the Board and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"board","Value":"Board"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the Board.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"board","Value":"Board"}],"SeeAlso":null}],"Name":"BoardLogicBase","Inheritance":"LogicBase<KnightsTour.Board, KnightsTour.BoardLite, int?>","Description":"Base board logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"BoardLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"Board.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Board\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"Board","Inheritance":"base()","Description":"Initializes a new empty instance of the Board class.","Flags":["Public"],"Attributes":[],"Examples":["Board board = new Board();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"Board","Inheritance":"base(id)","Description":"Initializes a new empty instance of the Board class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["Board board = new Board(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"Board","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Board class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"Board","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Board class from the record in a data reader populating only the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.BoardProperty>"}],"SeeAlso":null},{"Name":"Board","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Board class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"Board","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Board class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the Board columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.BoardProperty>"}],"SeeAlso":null},{"Name":"Board","Inheritance":"base(boardLite)","Description":"Initializes a new empty instance of the Board class from the lite version of the Board entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardLite","Value":"BoardLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Board","Inheritance":"BoardBase","Description":"The extended Board object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for Boards should be placed in the BoardLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Board\\","References":["System"],"Constructors":[{"Name":"BoardLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"BoardLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["BoardLite boardLite = new BoardLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"BoardLite","Inheritance":"base(board)","Description":"Initializes a new instance of the <see cref=\"BoardLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["BoardLite boardLite = new BoardLite(new BoardLogic.GetByPK(1));","if (boardLite != null)","{","    Console.WriteLine(boardLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"board","Value":"Board"}],"SeeAlso":null},{"Name":"BoardLite","Inheritance":"base(boardBase)","Description":"Initializes a new instance of the <see cref=\"BoardLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"boardBase","Value":"BoardBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"BoardLite","Inheritance":"BoardLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"Board\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Board\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"BoardLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["BoardLogicBase BoardLogic = new BoardLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"BoardLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the Board given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"BoardLogic","Inheritance":"BoardLogicBase","Description":"Auto generated from DB table Board","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"Board\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Board\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended Board extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"BoardValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Board\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"BoardValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the Board validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"BoardValidation","Inheritance":"BoardValidationBase","Description":"The extended Board validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\DifficultyLevel\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"DifficultyLevelBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"DifficultyLevelBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"DifficultyLevelBase","Inheritance":null,"Description":"Initializes a new empty instance of the DifficultyLevelBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"DifficultyLevelBase","Inheritance":null,"Description":"Initializes a new empty instance of the DifficultyLevelBase class from the record in a data reader populating only the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.DifficultyLevelProperty>"}],"SeeAlso":null},{"Name":"DifficultyLevelBase","Inheritance":null,"Description":"Initializes a new empty instance of the DifficultyLevelBase class from a DataRow with the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.DifficultyLevelProperty>"}],"SeeAlso":null},{"Name":"DifficultyLevelBase","Inheritance":null,"Description":"Initializes a new empty instance of the DifficultyLevelBase class from a DataRow with the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelLite","Value":"DifficultyLevelLite"}],"SeeAlso":null},{"Name":"DifficultyLevelBase","Inheritance":null,"Description":"Initializes a new empty instance of the DifficultyLevelBase class from a DataRow with the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.DifficultyLevelProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_puzzles","Inheritance":null,"Description":"Private collection of child puzzles references (by DifficultyLevelId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.Puzzle>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Puzzles","Inheritance":null,"Description":"Gets or sets the collection of child puzzles references (by DifficultyLevelId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.Puzzle>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.DifficultyLevelProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"DifficultyLevelLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this DifficultyLevel instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PercentVisibilityAsCurrency","Inheritance":null,"Description":"Returns the PercentVisibility formatted as a currency.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"DifficultyLevel","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.DifficultyLevelProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.DifficultyLevelProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelLite","Value":"DifficultyLevelLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"DifficultyLevelBase","Inheritance":"DifficultyLevelLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The DifficultyLevelBase class which tightly binds the model to the object.  Inherits <seealso cref=\"DifficultyLevelLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"DifficultyLevel\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\DifficultyLevel\\","References":["System","System.Xml"],"Constructors":[{"Name":"DifficultyLevelLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"DifficultyLevelLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"DifficultyLevelLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"DifficultyLevelLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelBase","Value":"DifficultyLevelBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"DifficultyLevelId","Inheritance":null,"Description":"Gets or sets the primary key field difficulty level id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Name","Inheritance":null,"Description":"Gets or sets the name.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Description","Inheritance":null,"Description":"Gets or sets the description.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"MaximumGap","Inheritance":null,"Description":"Gets or sets the maximum gap.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PercentVisibility","Inheritance":null,"Description":"Gets or sets the percent visibility.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"decimal","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"HighlightClosestEnabled","Inheritance":null,"Description":"Gets or sets the highlight closest enabled.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DuplicateCheckingEnabled","Inheritance":null,"Description":"Gets or sets the duplicate checking enabled.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"GuessFilterEnabled","Inheritance":null,"Description":"Gets or sets the guess filter enabled.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"DifficultyLevelLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"DifficultyLevelLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The DifficultyLevelLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"DifficultyLevelLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\DifficultyLevel\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"DifficultyLevelValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"DifficultyLevelValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"DifficultyLevelValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the DifficultyLevel entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\DifficultyLevel\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"DifficultyLevel\" /> to its <seealso cref=\"DifficultyLevelLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"DifficultyLevelLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevel","Value":"this DifficultyLevel"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"DifficultyLevel\" /> to their <seealso cref=\"DifficultyLevelLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<DifficultyLevelLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevels","Value":"this IEnumerable<DifficultyLevel>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"DifficultyLevelLite\" /> to its <seealso cref=\"DifficultyLevel\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"DifficultyLevel","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelLite","Value":"this DifficultyLevelLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"DifficultyLevelLite\" /> to their <seealso cref=\"DifficultyLevel\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<DifficultyLevel>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelLites","Value":"this IEnumerable<DifficultyLevelLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The DifficultyLevelLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\DifficultyLevel\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"DifficultyLevelLogicBase","Inheritance":"base(Enumerations.EntityName.DifficultyLevel, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevelLogicBase DifficultyLevelLogic = new DifficultyLevelLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"DifficultyLevelLogicBase","Inheritance":"base(Enumerations.EntityName.DifficultyLevel, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the DifficultyLevel and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevel","Value":"DifficultyLevel"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the DifficultyLevel.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevel","Value":"DifficultyLevel"}],"SeeAlso":null}],"Name":"DifficultyLevelLogicBase","Inheritance":"LogicBase<KnightsTour.DifficultyLevel, KnightsTour.DifficultyLevelLite, int?>","Description":"Base difficultyLevel logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"DifficultyLevelLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevel.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\DifficultyLevel\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"DifficultyLevel","Inheritance":"base()","Description":"Initializes a new empty instance of the DifficultyLevel class.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevel difficultyLevel = new DifficultyLevel();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(id)","Description":"Initializes a new empty instance of the DifficultyLevel class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevel difficultyLevel = new DifficultyLevel(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the DifficultyLevel class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the DifficultyLevel class from the record in a data reader populating only the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.DifficultyLevelProperty>"}],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the DifficultyLevel class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the DifficultyLevel class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the DifficultyLevel columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.DifficultyLevelProperty>"}],"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":"base(difficultyLevelLite)","Description":"Initializes a new empty instance of the DifficultyLevel class from the lite version of the DifficultyLevel entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelLite","Value":"DifficultyLevelLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"DifficultyLevel","Inheritance":"DifficultyLevelBase","Description":"The extended DifficultyLevel object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for DifficultyLevels should be placed in the DifficultyLevelLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\DifficultyLevel\\","References":["System"],"Constructors":[{"Name":"DifficultyLevelLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"DifficultyLevelLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevelLite difficultyLevelLite = new DifficultyLevelLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"DifficultyLevelLite","Inheritance":"base(difficultyLevel)","Description":"Initializes a new instance of the <see cref=\"DifficultyLevelLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevelLite difficultyLevelLite = new DifficultyLevelLite(new DifficultyLevelLogic.GetByPK(1));","if (difficultyLevelLite != null)","{","    Console.WriteLine(difficultyLevelLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevel","Value":"DifficultyLevel"}],"SeeAlso":null},{"Name":"DifficultyLevelLite","Inheritance":"base(difficultyLevelBase)","Description":"Initializes a new instance of the <see cref=\"DifficultyLevelLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"difficultyLevelBase","Value":"DifficultyLevelBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"DifficultyLevelLite","Inheritance":"DifficultyLevelLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"DifficultyLevel\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\DifficultyLevel\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"DifficultyLevelLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["DifficultyLevelLogicBase DifficultyLevelLogic = new DifficultyLevelLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"DifficultyLevelLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the DifficultyLevel given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"DifficultyLevelLogic","Inheritance":"DifficultyLevelLogicBase","Description":"Auto generated from DB table DifficultyLevel","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"DifficultyLevel\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\DifficultyLevel\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended DifficultyLevel extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"DifficultyLevelValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\DifficultyLevel\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"DifficultyLevelValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the DifficultyLevel validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"DifficultyLevelValidation","Inheritance":"DifficultyLevelValidationBase","Description":"The extended DifficultyLevel validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventHistory\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"EventHistoryBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"EventHistoryBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventHistoryBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventHistoryBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"EventHistoryBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventHistoryBase class from the record in a data reader populating only the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventHistoryProperty>"}],"SeeAlso":null},{"Name":"EventHistoryBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventHistoryBase class from a DataRow with the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventHistoryProperty>"}],"SeeAlso":null},{"Name":"EventHistoryBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventHistoryBase class from a DataRow with the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryLite","Value":"EventHistoryLite"}],"SeeAlso":null},{"Name":"EventHistoryBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventHistoryBase class from a DataRow with the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventHistoryProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_eventType","Inheritance":null,"Description":"Private EventType (by EventTypeId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.EventType","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_member","Inheritance":null,"Description":"Private Member (by MemberId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.Member","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventType","Inheritance":null,"Description":"Gets or sets the related EventType (by EventTypeId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.EventType","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Member","Inheritance":null,"Description":"Gets or sets the related Member (by MemberId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.Member","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.EventHistoryProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"EventHistoryLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this EventHistory instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventDateFormatted","Inheritance":null,"Description":"Returns the EventDate formatted with either the projects default date format or the custom property date format if defined.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"EventHistory","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.EventHistoryProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventHistoryProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryLite","Value":"EventHistoryLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"EventHistoryBase","Inheritance":"EventHistoryLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The EventHistoryBase class which tightly binds the model to the object.  Inherits <seealso cref=\"EventHistoryLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"EventHistory\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventHistory\\","References":["System","System.Xml"],"Constructors":[{"Name":"EventHistoryLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventHistoryLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventHistoryLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventHistoryLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryBase","Value":"EventHistoryBase"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"_eventTypeLite","Inheritance":null,"Description":"Private EventType (by EventTypeId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.EventTypeLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_memberLite","Inheritance":null,"Description":"Private Member (by MemberId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.MemberLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"EventType","Inheritance":null,"Description":"Gets or sets the related EventTypeLite (by EventTypeId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.EventTypeLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Member","Inheritance":null,"Description":"Gets or sets the related MemberLite (by MemberId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.MemberLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventHistoryId","Inheritance":null,"Description":"Gets or sets the primary key field event history id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventTypeId","Inheritance":null,"Description":"Gets or sets the event type id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventDate","Inheritance":null,"Description":"Gets or sets the event date.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"DateTime","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SourceInternetAddress","Inheritance":null,"Description":"Gets or sets the source internet address.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Country","Inheritance":null,"Description":"Gets or sets the country.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Region","Inheritance":null,"Description":"Gets or sets the region.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"City","Inheritance":null,"Description":"Gets or sets the city.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"ZipPostal","Inheritance":null,"Description":"Gets or sets the zip postal.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Context","Inheritance":null,"Description":"Gets or sets the context.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"MemberId","Inheritance":null,"Description":"Gets or sets the member id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"EventHistoryLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"EventHistoryLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The EventHistoryLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"EventHistoryLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventHistory\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"EventHistoryValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventHistoryValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"EventHistoryValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the EventHistory entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventHistory\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"EventHistory\" /> to its <seealso cref=\"EventHistoryLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"EventHistoryLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistory","Value":"this EventHistory"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"EventHistory\" /> to their <seealso cref=\"EventHistoryLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<EventHistoryLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistories","Value":"this IEnumerable<EventHistory>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"EventHistoryLite\" /> to its <seealso cref=\"EventHistory\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"EventHistory","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryLite","Value":"this EventHistoryLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"EventHistoryLite\" /> to their <seealso cref=\"EventHistory\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<EventHistory>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryLites","Value":"this IEnumerable<EventHistoryLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The EventHistoryLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventHistory\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"EventHistoryLogicBase","Inheritance":"base(Enumerations.EntityName.EventHistory, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["EventHistoryLogicBase EventHistoryLogic = new EventHistoryLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"EventHistoryLogicBase","Inheritance":"base(Enumerations.EntityName.EventHistory, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the EventHistory and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistory","Value":"EventHistory"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the EventHistory.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistory","Value":"EventHistory"}],"SeeAlso":null}],"Name":"EventHistoryLogicBase","Inheritance":"LogicBase<KnightsTour.EventHistory, KnightsTour.EventHistoryLite, int?>","Description":"Base eventHistory logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"EventHistoryLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistory.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventHistory\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"EventHistory","Inheritance":"base()","Description":"Initializes a new empty instance of the EventHistory class.","Flags":["Public"],"Attributes":[],"Examples":["EventHistory eventHistory = new EventHistory();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(id)","Description":"Initializes a new empty instance of the EventHistory class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["EventHistory eventHistory = new EventHistory(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the EventHistory class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the EventHistory class from the record in a data reader populating only the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventHistoryProperty>"}],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the EventHistory class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the EventHistory class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the EventHistory columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventHistoryProperty>"}],"SeeAlso":null},{"Name":"EventHistory","Inheritance":"base(eventHistoryLite)","Description":"Initializes a new empty instance of the EventHistory class from the lite version of the EventHistory entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryLite","Value":"EventHistoryLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventHistory","Inheritance":"EventHistoryBase","Description":"The extended EventHistory object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for EventHistories should be placed in the EventHistoryLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventHistory\\","References":["System"],"Constructors":[{"Name":"EventHistoryLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"EventHistoryLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["EventHistoryLite eventHistoryLite = new EventHistoryLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventHistoryLite","Inheritance":"base(eventHistory)","Description":"Initializes a new instance of the <see cref=\"EventHistoryLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["EventHistoryLite eventHistoryLite = new EventHistoryLite(new EventHistoryLogic.GetByPK(1));","if (eventHistoryLite != null)","{","    Console.WriteLine(eventHistoryLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistory","Value":"EventHistory"}],"SeeAlso":null},{"Name":"EventHistoryLite","Inheritance":"base(eventHistoryBase)","Description":"Initializes a new instance of the <see cref=\"EventHistoryLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventHistoryBase","Value":"EventHistoryBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventHistoryLite","Inheritance":"EventHistoryLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"EventHistory\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventHistory\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"EventHistoryLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["EventHistoryLogicBase EventHistoryLogic = new EventHistoryLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"EventHistoryLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the EventHistory given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"EventHistoryLogic","Inheritance":"EventHistoryLogicBase","Description":"Auto generated from DB table EventHistory","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"EventHistory\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventHistory\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended EventHistory extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventHistoryValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventHistory\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"EventHistoryValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the EventHistory validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventHistoryValidation","Inheritance":"EventHistoryValidationBase","Description":"The extended EventHistory validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventType\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"EventTypeBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"EventTypeBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventTypeBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventTypeBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"EventTypeBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventTypeBase class from the record in a data reader populating only the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventTypeProperty>"}],"SeeAlso":null},{"Name":"EventTypeBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventTypeBase class from a DataRow with the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventTypeProperty>"}],"SeeAlso":null},{"Name":"EventTypeBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventTypeBase class from a DataRow with the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeLite","Value":"EventTypeLite"}],"SeeAlso":null},{"Name":"EventTypeBase","Inheritance":null,"Description":"Initializes a new empty instance of the EventTypeBase class from a DataRow with the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventTypeProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_eventHistories","Inheritance":null,"Description":"Private collection of child eventHistories references (by EventTypeId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.EventHistory>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventHistories","Inheritance":null,"Description":"Gets or sets the collection of child eventHistories references (by EventTypeId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.EventHistory>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.EventTypeProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"EventTypeLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this EventType instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypeProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"EventType","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.EventTypeProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypeProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.EventTypeProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeLite","Value":"EventTypeLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"EventTypeBase","Inheritance":"EventTypeLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The EventTypeBase class which tightly binds the model to the object.  Inherits <seealso cref=\"EventTypeLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"EventType\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventType\\","References":["System","System.Xml"],"Constructors":[{"Name":"EventTypeLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventTypeLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventTypeLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventTypeLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeBase","Value":"EventTypeBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"EventTypeId","Inheritance":null,"Description":"Gets or sets the primary key field event type id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Name","Inheritance":null,"Description":"Gets or sets the name.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"EventTypeLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"EventTypeLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The EventTypeLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"EventTypeLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventType\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"EventTypeValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"EventTypeValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"EventTypeValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the EventType entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventType\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"EventType\" /> to its <seealso cref=\"EventTypeLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"EventTypeLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventType","Value":"this EventType"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"EventType\" /> to their <seealso cref=\"EventTypeLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<EventTypeLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypes","Value":"this IEnumerable<EventType>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"EventTypeLite\" /> to its <seealso cref=\"EventType\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"EventType","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeLite","Value":"this EventTypeLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"EventTypeLite\" /> to their <seealso cref=\"EventType\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<EventType>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeLites","Value":"this IEnumerable<EventTypeLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The EventTypeLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\EventType\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"EventTypeLogicBase","Inheritance":"base(Enumerations.EntityName.EventType, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["EventTypeLogicBase EventTypeLogic = new EventTypeLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"EventTypeLogicBase","Inheritance":"base(Enumerations.EntityName.EventType, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the EventType and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventType","Value":"EventType"}],"SeeAlso":null}],"Name":"EventTypeLogicBase","Inheritance":"LogicBase<KnightsTour.EventType, KnightsTour.EventTypeLite, int?>","Description":"Base eventType logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"EventTypeLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventType.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventType\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"EventType","Inheritance":"base()","Description":"Initializes a new empty instance of the EventType class.","Flags":["Public"],"Attributes":[],"Examples":["EventType eventType = new EventType();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(id)","Description":"Initializes a new empty instance of the EventType class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["EventType eventType = new EventType(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the EventType class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the EventType class from the record in a data reader populating only the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventTypeProperty>"}],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the EventType class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the EventType class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the EventType columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.EventTypeProperty>"}],"SeeAlso":null},{"Name":"EventType","Inheritance":"base(eventTypeLite)","Description":"Initializes a new empty instance of the EventType class from the lite version of the EventType entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeLite","Value":"EventTypeLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventType","Inheritance":"EventTypeBase","Description":"The extended EventType object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for EventTypes should be placed in the EventTypeLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventType\\","References":["System"],"Constructors":[{"Name":"EventTypeLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"EventTypeLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["EventTypeLite eventTypeLite = new EventTypeLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"EventTypeLite","Inheritance":"base(eventType)","Description":"Initializes a new instance of the <see cref=\"EventTypeLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["EventTypeLite eventTypeLite = new EventTypeLite(new EventTypeLogic.GetByPK(1));","if (eventTypeLite != null)","{","    Console.WriteLine(eventTypeLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventType","Value":"EventType"}],"SeeAlso":null},{"Name":"EventTypeLite","Inheritance":"base(eventTypeBase)","Description":"Initializes a new instance of the <see cref=\"EventTypeLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"eventTypeBase","Value":"EventTypeBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventTypeLite","Inheritance":"EventTypeLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"EventType\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventType\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"EventTypeLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["EventTypeLogicBase EventTypeLogic = new EventTypeLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"EventTypeLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the EventType given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"EventTypeLogic","Inheritance":"EventTypeLogicBase","Description":"Auto generated from DB table EventType","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"EventType\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventType\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended EventType extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EventTypeValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\EventType\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"EventTypeValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the EventType validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"EventTypeValidation","Inheritance":"EventTypeValidationBase","Description":"The extended EventType validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Member\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"MemberBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"MemberBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"MemberBase","Inheritance":null,"Description":"Initializes a new empty instance of the MemberBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"MemberBase","Inheritance":null,"Description":"Initializes a new empty instance of the MemberBase class from the record in a data reader populating only the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.MemberProperty>"}],"SeeAlso":null},{"Name":"MemberBase","Inheritance":null,"Description":"Initializes a new empty instance of the MemberBase class from a DataRow with the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.MemberProperty>"}],"SeeAlso":null},{"Name":"MemberBase","Inheritance":null,"Description":"Initializes a new empty instance of the MemberBase class from a DataRow with the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberLite","Value":"MemberLite"}],"SeeAlso":null},{"Name":"MemberBase","Inheritance":null,"Description":"Initializes a new empty instance of the MemberBase class from a DataRow with the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.MemberProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_solutions","Inheritance":null,"Description":"Private collection of child solutions references (by MemberId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.Solution>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_eventHistories","Inheritance":null,"Description":"Private collection of child eventHistories references (by MemberId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.EventHistory>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Solutions","Inheritance":null,"Description":"Gets or sets the collection of child solutions references (by MemberId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.Solution>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventHistories","Inheritance":null,"Description":"Gets or sets the collection of child eventHistories references (by MemberId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.EventHistory>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.MemberProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"MemberLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this Member instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CreateDateFormatted","Inheritance":null,"Description":"Returns the CreateDate formatted with either the projects default date format or the custom property date format if defined.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"Member","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.MemberProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.MemberProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberLite","Value":"MemberLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"MemberBase","Inheritance":"MemberLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The MemberBase class which tightly binds the model to the object.  Inherits <seealso cref=\"MemberLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"Member\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Member\\","References":["System","System.Xml"],"Constructors":[{"Name":"MemberLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"MemberLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"MemberLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"MemberLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberBase","Value":"MemberBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"MemberId","Inheritance":null,"Description":"Gets or sets the primary key field member id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CreateDate","Inheritance":null,"Description":"Gets or sets the create date.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"DateTime","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DisplayName","Inheritance":null,"Description":"Gets or sets the display name.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Password","Inheritance":null,"Description":"Gets or sets the password.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"UserInitials","Inheritance":null,"Description":"Gets or sets the user initials.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Code","Inheritance":null,"Description":"Gets or sets the code.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsAdministrator","Inheritance":null,"Description":"Gets or sets the is administrator.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"MemberLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"MemberLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The MemberLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"MemberLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Member\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"MemberValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"MemberValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"MemberValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the Member entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Member\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"Member\" /> to its <seealso cref=\"MemberLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"MemberLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"member","Value":"this Member"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"Member\" /> to their <seealso cref=\"MemberLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<MemberLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"members","Value":"this IEnumerable<Member>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"MemberLite\" /> to its <seealso cref=\"Member\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Member","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberLite","Value":"this MemberLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"MemberLite\" /> to their <seealso cref=\"Member\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<Member>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberLites","Value":"this IEnumerable<MemberLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The MemberLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Member\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"MemberLogicBase","Inheritance":"base(Enumerations.EntityName.Member, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["MemberLogicBase MemberLogic = new MemberLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"MemberLogicBase","Inheritance":"base(Enumerations.EntityName.Member, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the Member and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"member","Value":"Member"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the Member.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"member","Value":"Member"}],"SeeAlso":null},{"Name":"Update","Inheritance":null,"Description":"Update the Member.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"member","Value":"Member"}],"SeeAlso":null}],"Name":"MemberLogicBase","Inheritance":"LogicBase<KnightsTour.Member, KnightsTour.MemberLite, int?>","Description":"Base member logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"MemberLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"Member.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Member\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"Member","Inheritance":"base()","Description":"Initializes a new empty instance of the Member class.","Flags":["Public"],"Attributes":[],"Examples":["Member member = new Member();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"Member","Inheritance":"base(id)","Description":"Initializes a new empty instance of the Member class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["Member member = new Member(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"Member","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Member class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"Member","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Member class from the record in a data reader populating only the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.MemberProperty>"}],"SeeAlso":null},{"Name":"Member","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Member class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"Member","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Member class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the Member columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.MemberProperty>"}],"SeeAlso":null},{"Name":"Member","Inheritance":"base(memberLite)","Description":"Initializes a new empty instance of the Member class from the lite version of the Member entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberLite","Value":"MemberLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Member","Inheritance":"MemberBase","Description":"The extended Member object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for Members should be placed in the MemberLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Member\\","References":["System"],"Constructors":[{"Name":"MemberLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"MemberLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["MemberLite memberLite = new MemberLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"MemberLite","Inheritance":"base(member)","Description":"Initializes a new instance of the <see cref=\"MemberLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["MemberLite memberLite = new MemberLite(new MemberLogic.GetByPK(1));","if (memberLite != null)","{","    Console.WriteLine(memberLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"member","Value":"Member"}],"SeeAlso":null},{"Name":"MemberLite","Inheritance":"base(memberBase)","Description":"Initializes a new instance of the <see cref=\"MemberLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"memberBase","Value":"MemberBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"MemberLite","Inheritance":"MemberLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"Member\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Member\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"MemberLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["MemberLogicBase MemberLogic = new MemberLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"MemberLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the Member given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"MemberLogic","Inheritance":"MemberLogicBase","Description":"Auto generated from DB table Member","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"Member\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Member\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended Member extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"MemberValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Member\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"MemberValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the Member validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"MemberValidation","Inheritance":"MemberValidationBase","Description":"The extended Member validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Puzzle\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"PuzzleBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"PuzzleBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"PuzzleBase","Inheritance":null,"Description":"Initializes a new empty instance of the PuzzleBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"PuzzleBase","Inheritance":null,"Description":"Initializes a new empty instance of the PuzzleBase class from the record in a data reader populating only the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.PuzzleProperty>"}],"SeeAlso":null},{"Name":"PuzzleBase","Inheritance":null,"Description":"Initializes a new empty instance of the PuzzleBase class from a DataRow with the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.PuzzleProperty>"}],"SeeAlso":null},{"Name":"PuzzleBase","Inheritance":null,"Description":"Initializes a new empty instance of the PuzzleBase class from a DataRow with the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleLite","Value":"PuzzleLite"}],"SeeAlso":null},{"Name":"PuzzleBase","Inheritance":null,"Description":"Initializes a new empty instance of the PuzzleBase class from a DataRow with the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.PuzzleProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_board","Inheritance":null,"Description":"Private Board (by BoardId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.Board","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_difficultyLevel","Inheritance":null,"Description":"Private DifficultyLevel (by DifficultyLevelId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.DifficultyLevel","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_solutions","Inheritance":null,"Description":"Private collection of child solutions references (by PuzzleId) used for graph hydration.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"IEnumerable<KnightsTour.Solution>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Board","Inheritance":null,"Description":"Gets or sets the related Board (by BoardId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.Board","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":null,"Description":"Gets or sets the related DifficultyLevel (by DifficultyLevelId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.DifficultyLevel","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Solutions","Inheritance":null,"Description":"Gets or sets the collection of child solutions references (by PuzzleId) used for graph hydration.  Lazy loaded if not initialized explicitly.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"IEnumerable<KnightsTour.Solution>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.PuzzleProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"PuzzleLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this Puzzle instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleOfTheDayDateFormatted","Inheritance":null,"Description":"Returns the PuzzleOfTheDayDate formatted with either the projects default date format or the custom property date format if defined.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzleProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"Puzzle","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.PuzzleProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzlePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzlePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzlePropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzleProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.PuzzleProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleLite","Value":"PuzzleLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"PuzzleBase","Inheritance":"PuzzleLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The PuzzleBase class which tightly binds the model to the object.  Inherits <seealso cref=\"PuzzleLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"Puzzle\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Puzzle\\","References":["System","System.Xml"],"Constructors":[{"Name":"PuzzleLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"PuzzleLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"PuzzleLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"PuzzleLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleBase","Value":"PuzzleBase"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"_boardLite","Inheritance":null,"Description":"Private Board (by BoardId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.BoardLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_difficultyLevelLite","Inheritance":null,"Description":"Private DifficultyLevel (by DifficultyLevelId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.DifficultyLevelLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Board","Inheritance":null,"Description":"Gets or sets the related BoardLite (by BoardId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.BoardLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DifficultyLevel","Inheritance":null,"Description":"Gets or sets the related DifficultyLevelLite (by DifficultyLevelId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.DifficultyLevelLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleId","Inheritance":null,"Description":"Gets or sets the primary key field puzzle id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleCode","Inheritance":null,"Description":"Gets or sets the puzzle code.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"Guid","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"BoardId","Inheritance":null,"Description":"Gets or sets the board id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DifficultyLevelId","Inheritance":null,"Description":"Gets or sets the difficulty level id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Path","Inheritance":null,"Description":"Gets or sets the path.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleOfTheDayDate","Inheritance":null,"Description":"Gets or sets the puzzle of the day date.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"DateTime?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"PuzzleLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"PuzzleLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The PuzzleLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"PuzzleLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Puzzle\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"PuzzleValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"PuzzleValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"PuzzleValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the Puzzle entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Puzzle\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"Puzzle\" /> to its <seealso cref=\"PuzzleLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"PuzzleLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzle","Value":"this Puzzle"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"Puzzle\" /> to their <seealso cref=\"PuzzleLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<PuzzleLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzles","Value":"this IEnumerable<Puzzle>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"PuzzleLite\" /> to its <seealso cref=\"Puzzle\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Puzzle","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleLite","Value":"this PuzzleLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"PuzzleLite\" /> to their <seealso cref=\"Puzzle\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<Puzzle>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleLites","Value":"this IEnumerable<PuzzleLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The PuzzleLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Puzzle\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"PuzzleLogicBase","Inheritance":"base(Enumerations.EntityName.Puzzle, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["PuzzleLogicBase PuzzleLogic = new PuzzleLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"PuzzleLogicBase","Inheritance":"base(Enumerations.EntityName.Puzzle, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the Puzzle and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzle","Value":"Puzzle"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the Puzzle.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzle","Value":"Puzzle"}],"SeeAlso":null}],"Name":"PuzzleLogicBase","Inheritance":"LogicBase<KnightsTour.Puzzle, KnightsTour.PuzzleLite, int?>","Description":"Base puzzle logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"PuzzleLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"Puzzle.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Puzzle\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"Puzzle","Inheritance":"base()","Description":"Initializes a new empty instance of the Puzzle class.","Flags":["Public"],"Attributes":[],"Examples":["Puzzle puzzle = new Puzzle();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(id)","Description":"Initializes a new empty instance of the Puzzle class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["Puzzle puzzle = new Puzzle(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Puzzle class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Puzzle class from the record in a data reader populating only the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.PuzzleProperty>"}],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Puzzle class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Puzzle class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the Puzzle columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.PuzzleProperty>"}],"SeeAlso":null},{"Name":"Puzzle","Inheritance":"base(puzzleLite)","Description":"Initializes a new empty instance of the Puzzle class from the lite version of the Puzzle entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleLite","Value":"PuzzleLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Puzzle","Inheritance":"PuzzleBase","Description":"The extended Puzzle object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for Puzzles should be placed in the PuzzleLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Puzzle\\","References":["System"],"Constructors":[{"Name":"PuzzleLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"PuzzleLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["PuzzleLite puzzleLite = new PuzzleLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"PuzzleLite","Inheritance":"base(puzzle)","Description":"Initializes a new instance of the <see cref=\"PuzzleLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["PuzzleLite puzzleLite = new PuzzleLite(new PuzzleLogic.GetByPK(1));","if (puzzleLite != null)","{","    Console.WriteLine(puzzleLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzle","Value":"Puzzle"}],"SeeAlso":null},{"Name":"PuzzleLite","Inheritance":"base(puzzleBase)","Description":"Initializes a new instance of the <see cref=\"PuzzleLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"puzzleBase","Value":"PuzzleBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"PuzzleLite","Inheritance":"PuzzleLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"Puzzle\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Puzzle\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"PuzzleLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["PuzzleLogicBase PuzzleLogic = new PuzzleLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"PuzzleLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the Puzzle given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"PuzzleLogic","Inheritance":"PuzzleLogicBase","Description":"Auto generated from DB table Puzzle","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"Puzzle\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Puzzle\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended Puzzle extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"PuzzleValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Puzzle\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"PuzzleValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the Puzzle validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"PuzzleValidation","Inheritance":"PuzzleValidationBase","Description":"The extended Puzzle validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Solution\\","References":["Newtonsoft.Json","Newtonsoft.Json.Linq","System","System.Collections.Generic","System.Data","System.Dynamic","System.Text","System.Xml","System.Xml.Serialization","KnightsTour.CoreLibrary"],"Constructors":[{"Name":"SolutionBase","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"SolutionBase\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SolutionBase","Inheritance":null,"Description":"Initializes a new empty instance of the SolutionBase class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"SolutionBase","Inheritance":null,"Description":"Initializes a new empty instance of the SolutionBase class from the record in a data reader populating only the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.SolutionProperty>"}],"SeeAlso":null},{"Name":"SolutionBase","Inheritance":null,"Description":"Initializes a new empty instance of the SolutionBase class from a DataRow with the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.SolutionProperty>"}],"SeeAlso":null},{"Name":"SolutionBase","Inheritance":null,"Description":"Initializes a new empty instance of the SolutionBase class from a DataRow with the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionLite","Value":"SolutionLite"}],"SeeAlso":null},{"Name":"SolutionBase","Inheritance":null,"Description":"Initializes a new empty instance of the SolutionBase class from a DataRow with the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"ExpandoObject"},{"Key":"columnsToInclude","Value":"List<Enumerations.SolutionProperty>"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"storageHandler","Inheritance":null,"Description":"Storage handler reference used for lazy loading","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_puzzle","Inheritance":null,"Description":"Private Puzzle (by PuzzleId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.Puzzle","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_member","Inheritance":null,"Description":"Private Member (by MemberId) reference used for graph hydraion.  Lazy loaded if not initialized explicitly","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.Member","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Id","Inheritance":null,"Description":"The override implementation of the base Id interface property.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Puzzle","Inheritance":null,"Description":"Gets or sets the related Puzzle (by PuzzleId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.Puzzle","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Member","Inheritance":null,"Description":"Gets or sets the related Member (by MemberId) entity reference.  Lazy loaded unless specified.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"new KnightsTour.Member","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PrimaryKey","Inheritance":null,"Description":"The primary key column for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"Enumerations.SolutionProperty","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<FieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkHeader","Inheritance":null,"Description":"The insert header for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertBulkRow","Inheritance":null,"Description":"The SQL safe insert row for bulk SQL operations.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLInsertStatement","Inheritance":null,"Description":"The insert SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SQLUpdateStatement","Inheritance":null,"Description":"The update SQL statement for single records.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageStatement","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InitialState","Inheritance":null,"Description":"Gets or sets the initial state for this entity.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"SolutionLiteBase","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"IsNew","Inheritance":null,"Description":"Gets a value indicating whether this Solution instance is new or not.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"bool","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableName","Inheritance":null,"Description":"Gets the related name of the actual database table.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"TableSchema","Inheritance":null,"Description":"Gets the related name of the actual database schema.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PKDefaultValue","Inheritance":null,"Description":"Gets the primary key default value.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StorageHandler","Inheritance":null,"Description":"Gets or sets the storage handler from the default configured source unless otherwise set.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"KnightsTour.CoreLibrary.IStorageHandler","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLabel","Inheritance":null,"Description":"The configured label or label collection configured, or the PK number or (new) if a new record.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionDateFormatted","Inheritance":null,"Description":"Returns the SolutionDate formatted with either the projects default date format or the custom property date format if defined.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionDurationAsCurrency","Inheritance":null,"Description":"Returns the SolutionDuration formatted as a currency.","Flags":["Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"Validate","Inheritance":null,"Description":"Validates the object using the defined field validators.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SetOriginalProperties","Inheritance":null,"Description":"Sets the original properties (required for object state checking).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SerializeObject","Inheritance":null,"Description":"Serializes the object based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"SerializeDifferential","Inheritance":null,"Description":"Serializes the object differential based on the defined serialization strategy defined in the <seealso cref=\"AuditHandler\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[],"SeeAlso":null},{"Name":"ToDynamic","Inheritance":null,"Description":"Creates a dynamic object based on the passed <seealso cref=\"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy\" />.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"strategy","Value":"KnightsTour.CoreLibrary.Enumerations.DynamicObjectStrategy"}],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether this instance is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"IsModified","Inheritance":null,"Description":"Determines whether the specified property is modified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"bool","Remarks":[],"Exceptions":["<exception cref=\"NotImplementedException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionProperty"}],"SeeAlso":null},{"Name":"Initialize","Inheritance":null,"Description":"Initializes the properties of this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"baseInitialize","Inheritance":null,"Description":"The privately wrapped implementation of the Initialize method.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"arguments","Value":"object[]"}],"SeeAlso":null},{"Name":"Clone","Inheritance":null,"Description":"Clones this instance.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"Solution","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ToString","Inheritance":null,"Description":"Returns a readable summary of this object.","Flags":["Override","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"ConvertProperty","Inheritance":null,"Description":"Converts a non computed property to a regular property.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"Enumerations.SolutionProperty","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionPropertyNotComputed"}],"SeeAlso":null},{"Name":"GetDBValue","Inheritance":null,"Description":"Returns the underlying object value.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"dynamic","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionProperty"}],"SeeAlso":null},{"Name":"GetDataType","Inheritance":null,"Description":"Returns the underlying object data type for this language.","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":["<exception cref=\"ArgumentException\"></exception>"],"Parameters":[{"Key":"property","Value":"Enumerations.SolutionProperty"}],"SeeAlso":null},{"Name":"SetPrimaryKey","Inheritance":null,"Description":"Sets the primary key.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"UpdateFromLite","Inheritance":null,"Description":"Updates the individual properties from the lite object.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionLite","Value":"SolutionLite"}],"SeeAlso":null},{"Name":"GetStoredProcedureName","Inheritance":null,"Description":"Returns the stored procedure name (of a given type) or this class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"type","Value":"KnightsTour.CoreLibrary.Enumerations.StoredProcedureType"}],"SeeAlso":null}],"Name":"SolutionBase","Inheritance":"SolutionLiteBase, KnightsTour.CoreLibrary.IEntity<int?>","Description":"The SolutionBase class which tightly binds the model to the object.  Inherits <seealso cref=\"SolutionLiteBase\" /> and implements <seealso cref=\"KnightsTour.CoreLibrary.IEntity{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"Solution\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionLiteBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Solution\\","References":["System","System.Xml"],"Constructors":[{"Name":"SolutionLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"SolutionLiteBase\"/> class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SolutionLiteBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"SolutionLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionBase","Value":"SolutionBase"}],"SeeAlso":null}],"Declarations":[{"DefaultValue":"null","Name":"_puzzleLite","Inheritance":null,"Description":"Private Puzzle (by PuzzleId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.PuzzleLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"_memberLite","Inheritance":null,"Description":"Private Member (by MemberId) reference used for lite graph hydraion.  NOT lazy loaded","Flags":["Private"],"Attributes":null,"Examples":null,"Returns":"KnightsTour.MemberLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"Puzzle","Inheritance":null,"Description":"Gets or sets the related PuzzleLite (by PuzzleId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.PuzzleLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Member","Inheritance":null,"Description":"Gets or sets the related MemberLite (by MemberId) entity reference.  Never lazy loaded.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"KnightsTour.MemberLite","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionId","Inheritance":null,"Description":"Gets or sets the primary key field solution id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleId","Inheritance":null,"Description":"Gets or sets the puzzle id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"UserInitials","Inheritance":null,"Description":"Gets or sets the user initials.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"MemberId","Inheritance":null,"Description":"Gets or sets the member id.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"int?","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionDate","Inheritance":null,"Description":"Gets or sets the solution date.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"DateTime","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionDuration","Inheritance":null,"Description":"Gets or sets the solution duration.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"decimal","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"SolutionLiteBase_OnIdSet","Inheritance":null,"Description":"Invoked when the generic Id field of this class is modified (set).","Flags":["Private"],"Attributes":[],"Examples":[],"Returns":"void","Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Name":"SolutionLiteBase","Inheritance":"KnightsTour.CoreLibrary.EntityBase<int?>","Description":"The SolutionLiteBase class which is the single place which defines the properties.  Inherits <seealso cref=\"KnightsTour.CoreLibrary.EntityBase{T}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref=\"SolutionLite\" />."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionValidationBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Solution\\","References":["System","System.Xml","System.Collections.Generic"],"Constructors":[{"Name":"SolutionValidationBase","Inheritance":null,"Description":"Initializes a new instance of the <see cref=\"SolutionValidation\"/> class initialized with default properties.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Derived field validations are created here but can be extended, removed or updated from the exended class."],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"FieldValidations","Inheritance":null,"Description":"Gets or sets the field validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IFieldValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"RuleValidations","Inheritance":null,"Description":"Gets or sets the rule validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.IRuleValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"CustomValidations","Inheritance":null,"Description":"Gets or sets the custom validations.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"List<KnightsTour.CoreLibrary.ICustomValidator>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"SolutionValidationBase","Inheritance":"KnightsTour.CoreLibrary.IEntityValidator","Description":"Manages and performs base validation for the Solution entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionExtensionsBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Solution\\","References":["System.Collections.Generic"],"Constructors":[{"Name":"ToLite","Inheritance":null,"Description":"Converts a <seealso cref=\"Solution\" /> to its <seealso cref=\"SolutionLite\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"SolutionLite","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solution","Value":"this Solution"}],"SeeAlso":null},{"Name":"ToLite","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"Solution\" /> to their <seealso cref=\"SolutionLite\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<SolutionLite>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutions","Value":"this IEnumerable<Solution>"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a <seealso cref=\"SolutionLite\" /> to its <seealso cref=\"Solution\" /> representation.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Solution","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionLite","Value":"this SolutionLite"}],"SeeAlso":null},{"Name":"ToFull","Inheritance":null,"Description":"Converts a collection of <seealso cref=\"SolutionLite\" /> to their <seealso cref=\"Solution\" /> representations.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"IEnumerable<Solution>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionLites","Value":"this IEnumerable<SolutionLite>"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The SolutionLiteExtensionsBase class where common and useful extensions are placed.","Flags":["Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model.","This class should NOT be modified - any extensions or overrides should be completed in the extended extensions class provided."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionLogicBase.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\Solution\\","References":["System","System.Collections.Generic","System.Data","System.Linq","System.Linq.Dynamic","System.Transactions"],"Constructors":[{"Name":"SolutionLogicBase","Inheritance":"base(Enumerations.EntityName.Solution, userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["SolutionLogicBase SolutionLogic = new SolutionLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"SolutionLogicBase","Inheritance":"base(Enumerations.EntityName.Solution, handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"InsertCascade","Inheritance":null,"Description":"Inserts the Solution and also checks to insert all the FK objects as well.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solution","Value":"Solution"}],"SeeAlso":null},{"Name":"Insert","Inheritance":null,"Description":"Inserts the Solution.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"new KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solution","Value":"Solution"}],"SeeAlso":null}],"Name":"SolutionLogicBase","Inheritance":"LogicBase<KnightsTour.Solution, KnightsTour.SolutionLite, int?>","Description":"Base solution logic support methods.  Implements both <seealso cref=\"KnightsTour.CoreLibrary.IRepository{T,TLite, TPk}\" /> and <seealso cref=\"KnightsTour.CoreLibrary.IEntityLogic{T,TLite, TPk}\" />","Flags":["Abstract","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class supports basic and extended CRUD access - agnostic to supporting both cache and direct database access.","This class is abstract and is meant to only be inherited and accessed via <seealso cref=\"SolutionLogic\" /> class.","This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"Solution.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Solution\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"Solution","Inheritance":"base()","Description":"Initializes a new empty instance of the Solution class.","Flags":["Public"],"Attributes":[],"Examples":["Solution solution = new Solution();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(id)","Description":"Initializes a new empty instance of the Solution class with the given primary key.","Flags":["Public"],"Attributes":[],"Examples":["Solution solution = new Solution(1);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"id","Value":"int?"}],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Solution class from the record in a data reader.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"}],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Solution class from the record in a data reader populating only the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"IDataRecord"},{"Key":"columnsToInclude","Value":"List<Enumerations.SolutionProperty>"}],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(record, null)","Description":"Initializes a new empty instance of the Solution class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />).","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"}],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(record, columnsToInclude)","Description":"Initializes a new empty instance of the Solution class from a DataRow (via a <see cref=\"DataTable\" /> usually part of a larger <see cref=\"DataSet\" />) populating only the Solution columns specified.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"record","Value":"DataRow"},{"Key":"columnsToInclude","Value":"List<Enumerations.SolutionProperty>"}],"SeeAlso":null},{"Name":"Solution","Inheritance":"base(solutionLite)","Description":"Initializes a new empty instance of the Solution class from the lite version of the Solution entity.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionLite","Value":"SolutionLite"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"Solution","Inheritance":"SolutionBase","Description":"The extended Solution object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add properties as you see fit here.","In general operations against or for Solutions should be placed in the SolutionLogic class.","The exception to this suggestion is overriding base methods (Initialize is a common example)","e.g. public new void Initialize(){ base.Initialize(); }"],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionLite.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Solution\\","References":["System"],"Constructors":[{"Name":"SolutionLite","Inheritance":"base()","Description":"Initializes a new instance of the <see cref=\"SolutionLite\"/> class.","Flags":["Public"],"Attributes":[],"Examples":["SolutionLite solutionLite = new SolutionLite();"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null},{"Name":"SolutionLite","Inheritance":"base(solution)","Description":"Initializes a new instance of the <see cref=\"SolutionLite\"/> class from its full class representation.","Flags":["Public"],"Attributes":[],"Examples":["SolutionLite solutionLite = new SolutionLite(new SolutionLogic.GetByPK(1));","if (solutionLite != null)","{","    Console.WriteLine(solutionLite.ToString());","}"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solution","Value":"Solution"}],"SeeAlso":null},{"Name":"SolutionLite","Inheritance":"base(solutionBase)","Description":"Initializes a new instance of the <see cref=\"SolutionLite\"/> class from its base class representation.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"solutionBase","Value":"SolutionBase"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"SolutionLite","Inheritance":"SolutionLiteBase, KnightsTour.CoreLibrary.IEntityLite<int?>","Description":"Represents a lite version of the <see cref=\"Solution\"/> object.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Helpful for API's.","You can Extended the lite object as you require."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionLogic.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Solution\\","References":["System","System.Collections.Generic","System.Linq"],"Constructors":[{"Name":"SolutionLogic","Inheritance":"base(userName)","Description":"Instantiates a new generic LogicBase class using the configured repository.","Flags":["Public"],"Attributes":[],"Examples":["SolutionLogicBase SolutionLogic = new SolutionLogic(userName);"],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"SolutionLogic","Inheritance":"base(handler, userName)","Description":"Instantiates a new generic LogicBase class using the passed handler.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"handler","Value":"KnightsTour.CoreLibrary.IStorageHandler"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[{"Name":"DoCustomAction","Inheritance":null,"Description":"Executes a custom action against the Solution given the passed ids.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":"KnightsTour.CoreLibrary.IActionResponse","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"actionName","Value":"string"},{"Key":"ids","Value":"string"}],"SeeAlso":null}],"Name":"SolutionLogic","Inheritance":"SolutionLogicBase","Description":"Auto generated from DB table Solution","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Use this class to manage and extend the generated logic related to the <see cref=\"Solution\"/> class.","This class is only regenerated if it is detected that it has never been modified."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionExtensions.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Solution\\","References":["System.Collections.Generic"],"Constructors":[],"Declarations":[],"Properties":[],"Methods":[],"Name":"Extension","Inheritance":null,"Description":"The extended Solution extensions.","Flags":["Extended","Partial","Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add extensions as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"SolutionValidation.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Extended\\Entities\\Solution\\","References":["System","System.Collections.Generic","System.Data"],"Constructors":[{"Name":"SolutionValidation","Inheritance":"base()","Description":"Initializes a new empty instance of the Solution validation class.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[],"SeeAlso":null}],"Declarations":[],"Properties":[],"Methods":[],"Name":"SolutionValidation","Inheritance":"SolutionValidationBase","Description":"The extended Solution validation class.","Flags":["Extended","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["Feel free to add validations as you see fit here."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},{"Namespace":"KnightsTour","FileName":"EntityMapper.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\","References":["Newtonsoft.Json","System","System.Collections.Concurrent","System.Collections.Generic","System.Linq","System.Xml.Serialization"],"Constructors":[],"Declarations":[{"DefaultValue":"null","Name":"entityNameMapper","Inheritance":null,"Description":"A mapper for entity names used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EntityName, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"entityNameTransformation","Inheritance":null,"Description":"A mapper for safe entity names to their original","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"boardPropertyMapper","Inheritance":null,"Description":"Mapper for Board properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.BoardProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"difficultyLevelPropertyMapper","Inheritance":null,"Description":"Mapper for DifficultyLevel properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.DifficultyLevelProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"eventHistoryPropertyMapper","Inheritance":null,"Description":"Mapper for EventHistory properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EventHistoryProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"eventTypePropertyMapper","Inheritance":null,"Description":"Mapper for EventType properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EventTypeProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"memberPropertyMapper","Inheritance":null,"Description":"Mapper for Member properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.MemberProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"puzzlePropertyMapper","Inheritance":null,"Description":"Mapper for Puzzle properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.PuzzleProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"solutionPropertyMapper","Inheritance":null,"Description":"Mapper for Solution properties used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.SolutionProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"boardFKs","Inheritance":null,"Description":"A list of Board foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.BoardProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"difficultyLevelFKs","Inheritance":null,"Description":"A list of DifficultyLevel foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.DifficultyLevelProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"eventHistoryFKs","Inheritance":null,"Description":"A list of EventHistory foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.EventHistoryProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"eventTypeFKs","Inheritance":null,"Description":"A list of EventType foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.EventTypeProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"memberFKs","Inheritance":null,"Description":"A list of Member foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.MemberProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"puzzleFKs","Inheritance":null,"Description":"A list of Puzzle foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.PuzzleProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"solutionFKs","Inheritance":null,"Description":"A list of Solution foreign keys used for lazy loading","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"List<Enumerations.SolutionProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"synonymTransformation","Inheritance":null,"Description":"A transformation for safe synonym enumerations to their declaration","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"viewTransformation","Inheritance":null,"Description":"A transformation for safe view enumerations to their database name equivalent","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"storedProcedureTransformation","Inheritance":null,"Description":"A transformation for safe stored procedure enumerations to their declaration","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"DefaultValue":"null","Name":"sequenceMapper","Inheritance":null,"Description":"A mapper for from class names to their declared (or default) sequence name","Flags":["Private","Static"],"Attributes":null,"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Properties":[{"Name":"EntityNameMapper","Inheritance":null,"Description":"Manages the entity mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EntityName, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EntityNameTransformation","Inheritance":null,"Description":"Transforms safe entity names to their original name.","Flags":["Can Get","Public","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SynonymTransformation","Inheritance":null,"Description":"Transforms safe synonym enumerations to their original name.","Flags":["Can Get","Public","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"ViewTransformation","Inheritance":null,"Description":"Transforms safe view enumerations to their original name.","Flags":["Can Get","Public","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"StoredProcedureTransformation","Inheritance":null,"Description":"Transforms safe stored proecured enumerations to their original name.","Flags":["Can Get","Public","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"BoardPropertyMapper","Inheritance":null,"Description":"Manages the Board property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.BoardProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DifficultyLevelPropertyMapper","Inheritance":null,"Description":"Manages the DifficultyLevel property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.DifficultyLevelProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventHistoryPropertyMapper","Inheritance":null,"Description":"Manages the EventHistory property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EventHistoryProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventTypePropertyMapper","Inheritance":null,"Description":"Manages the EventType property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.EventTypeProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"MemberPropertyMapper","Inheritance":null,"Description":"Manages the Member property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.MemberProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzlePropertyMapper","Inheritance":null,"Description":"Manages the Puzzle property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.PuzzleProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionPropertyMapper","Inheritance":null,"Description":"Manages the Solution property mapper.","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<Enumerations.SolutionProperty, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"BoardFKs","Inheritance":null,"Description":"A list of Foreign Key's in the Board table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.BoardProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"DifficultyLevelFKs","Inheritance":null,"Description":"A list of Foreign Key's in the DifficultyLevel table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.DifficultyLevelProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventHistoryFKs","Inheritance":null,"Description":"A list of Foreign Key's in the EventHistory table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.EventHistoryProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"EventTypeFKs","Inheritance":null,"Description":"A list of Foreign Key's in the EventType table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.EventTypeProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"MemberFKs","Inheritance":null,"Description":"A list of Foreign Key's in the Member table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.MemberProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"PuzzleFKs","Inheritance":null,"Description":"A list of Foreign Key's in the Puzzle table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.PuzzleProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SolutionFKs","Inheritance":null,"Description":"A list of Foreign Key's in the Solution table","Flags":["Can Get","Private","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<Enumerations.SolutionProperty>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"SequenceMapper","Inheritance":null,"Description":"Maps a class name to the declared (or default) sequence name.","Flags":["Can Get","Public","Static"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"ConcurrentDictionary<string, string>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[{"Name":"GetEntityName","Inheritance":null,"Description":"Returns the actual (raw) entity name from the model based on the enumeration.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.EntityName"}],"SeeAlso":null},{"Name":"GetEntity","Inheritance":null,"Description":"Gets the enumerated value from the actual (raw) entity name (case insensitive).","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.EntityName","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetDbEntityName","Inheritance":null,"Description":"Returns the database table name for the entity.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entityName","Value":"string"}],"SeeAlso":null},{"Name":"GetSequenceName","Inheritance":null,"Description":"Gets the sequence name from a given entity name (case insensitive).","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entityName","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Board\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.BoardProperty"}],"SeeAlso":null},{"Name":"GetBoardProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Board\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.BoardProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"DifficultyLevel\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.DifficultyLevelProperty"}],"SeeAlso":null},{"Name":"GetDifficultyLevelProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"DifficultyLevel\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.DifficultyLevelProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"EventHistory\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.EventHistoryProperty"}],"SeeAlso":null},{"Name":"GetEventHistoryProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"EventHistory\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.EventHistoryProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"EventType\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.EventTypeProperty"}],"SeeAlso":null},{"Name":"GetEventTypeProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"EventType\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.EventTypeProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Member\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.MemberProperty"}],"SeeAlso":null},{"Name":"GetMemberProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Member\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.MemberProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Puzzle\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.PuzzleProperty"}],"SeeAlso":null},{"Name":"GetPuzzleProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Puzzle\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.PuzzleProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"GetPropertyName","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Solution\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"string","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entity","Value":"Enumerations.SolutionProperty"}],"SeeAlso":null},{"Name":"GetSolutionProperty","Inheritance":null,"Description":"Returns the original property name from the given enumerated <see cref=\"Solution\"/> property.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"Enumerations.SolutionProperty","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"name","Value":"string"}],"SeeAlso":null},{"Name":"FKNames","Inheritance":null,"Description":"Returns a list of strings coresponding to the foreign keys for the entity name passed.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":"List<string>","Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entityName","Value":"string"}],"SeeAlso":null}],"Name":"EntityMapper","Inheritance":null,"Description":"Maps the enties and entities properties to safe names and back again.","Flags":["Static","Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]},null,{"Namespace":"KnightsTour","FileName":"EntityMetaData.cs","Path":"E:\\Development\\KnightsTour\\DotNetCore\\KnightsTour.Library\\_Base\\Entities\\","References":["System","System.Collections.Generic","System.Xml.Serialization","Newtonsoft.Json"],"Constructors":[{"Name":"EntityMetaData","Inheritance":null,"Description":"Creates a meta data instance from the enumerated entity name.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entityName","Value":"Enumerations.EntityName"},{"Key":"userName","Value":"string"}],"SeeAlso":null},{"Name":"EntityMetaData","Inheritance":null,"Description":"Creates a meta data instance from the entity name.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":[],"Exceptions":[],"Parameters":[{"Key":"entityName","Value":"string"},{"Key":"userName","Value":"string"}],"SeeAlso":null}],"Declarations":[],"Properties":[{"Name":"EntityName","Inheritance":null,"Description":"The entity type.","Flags":["Can Set","Can Get","Public"],"Attributes":[],"Examples":null,"Returns":"Enumerations.EntityName","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Logic","Inheritance":null,"Description":"Returns an instance of the entities Logic class.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"dynamic","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Instance","Inheritance":null,"Description":"Returns an instance of the entities class.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"dynamic","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"InstanceLite","Inheritance":null,"Description":"Returns an instance of the entities class.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"dynamic","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"ForeignKeyEnum","Inheritance":null,"Description":"Returns a list of entity specific enumerated columns that are foreign keys.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<dynamic>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"Dependencies","Inheritance":null,"Description":"Returns a list of dependent related meta data classes.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<KnightsTour.RelatedEntityMetaData>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"ForeignKeys","Inheritance":null,"Description":"Returns a list of foreign key related meta data classes.","Flags":["Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"List<KnightsTour.RelatedEntityMetaData>","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null},{"Name":"UserName","Inheritance":null,"Description":"The user utilizing this class.","Flags":["Can Set","Can Get","Public"],"Attributes":["JsonIgnore","XmlIgnore"],"Examples":null,"Returns":"string","Remarks":null,"Exceptions":null,"Parameters":null,"SeeAlso":null}],"Methods":[],"Name":"EntityMetaData","Inheritance":null,"Description":"Provides meta data on entities.","Flags":["Public"],"Attributes":[],"Examples":[],"Returns":null,"Remarks":["This class will be regenerated when requested to stay in sync with your model."],"Exceptions":null,"Parameters":null,"SeeAlso":[]}];