// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 21, 2023 9:55:34 AM
// File             : DboVPuzzleOfTheDaySolutionLiteBase.cs
// ************************************************************************

using System;
using System.Data;

namespace KnightsTour
{
    /// <summary>
    /// The DboVPuzzleOfTheDaySolutionBase class which is the single place which defines the view properties. />
    /// Generated On: October 21, 2023 at 9:55:34 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref="DboVPuzzleOfTheDaySolution" />.
    /// </remarks>
    public abstract class DboVPuzzleOfTheDaySolutionBase
    {
        #region Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolutionBase"/> class.
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolutionBase"/> class initialized with default properties.
        /// </summary>
        public DboVPuzzleOfTheDaySolutionBase() : base()
        {
            // View properties.
            PuzzleId = 0;
            MemberId = 0;
            Rows = 0;
            Cols = 0;
            PuzzlePath = string.Empty;
            SolutionDuration = 0M;
            SolutionStartDate = DateTime.Now;
            Difficulty = string.Empty;
            PuzzleOfTheDayDate = DateTime.Now;
            MemberPath = string.Empty;
            SolutionId = 0;
            Note = string.Empty;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolutionBase"/> class.
        /// Initializes a new empty instance of the DboVPuzzleOfTheDaySolutionBase class from a DataRow with the DboVPuzzleOfTheDaySolution view columns specified.
        /// </summary>
        /// <param name="record">A <see cref="DataRow"/>.</param>
        public DboVPuzzleOfTheDaySolutionBase(DataRow record)
        {
            if (record != null)
            {
                PuzzleId = record.ValueAs<int>("PuzzleId");
                MemberId = record.ValueAs<int>("MemberId");
                Rows = record.ValueAs<int>("Rows");
                Cols = record.ValueAs<int>("Cols");
                PuzzlePath = record.ValueAs<string>("PuzzlePath");
                SolutionDuration = record.ValueAs<decimal>("SolutionDuration");
                SolutionStartDate = record.ValueAs<DateTime>("SolutionStartDate");
                Difficulty = record.ValueAs<string>("Difficulty");
                PuzzleOfTheDayDate = record.ValueAs<DateTime>("PuzzleOfTheDayDate");
                MemberPath = record.ValueAs<string>("MemberPath");
                SolutionId = record.ValueAs<int>("SolutionId");
                Note = record.ValueAs<string>("Note");
            }
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolutionBase"/> class.
        /// Initializes a new empty instance of the DboVPuzzleOfTheDaySolutionBase class from the record in a data reader populating only the DboVPuzzleOfTheDaySolution columns specified.
        /// </summary>
        /// <param name="record">A record returned from a database reader.</param>
        public DboVPuzzleOfTheDaySolutionBase(IDataRecord record)
        {
            if (record != null)
            {
                PuzzleId = record.ValueAs<int>("PuzzleId");
                MemberId = record.ValueAs<int>("MemberId");
                Rows = record.ValueAs<int>("Rows");
                Cols = record.ValueAs<int>("Cols");
                PuzzlePath = record.ValueAs<string>("PuzzlePath");
                SolutionDuration = record.ValueAs<decimal>("SolutionDuration");
                SolutionStartDate = record.ValueAs<DateTime>("SolutionStartDate");
                Difficulty = record.ValueAs<string>("Difficulty");
                PuzzleOfTheDayDate = record.ValueAs<DateTime>("PuzzleOfTheDayDate");
                MemberPath = record.ValueAs<string>("MemberPath");
                SolutionId = record.ValueAs<int>("SolutionId");
                Note = record.ValueAs<string>("Note");
            }
        }
        #endregion Constructor(s)

        #region Properties

        /// <summary>
        /// Gets or sets the puzzle id.
        /// </summary>
        /// <value>
        /// The puzzle id.
        /// </value>
        public int PuzzleId
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the member id.
        /// </summary>
        /// <value>
        /// The member id.
        /// </value>
        public int MemberId
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the rows.
        /// </summary>
        /// <value>
        /// The rows.
        /// </value>
        public int Rows
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the cols.
        /// </summary>
        /// <value>
        /// The cols.
        /// </value>
        public int Cols
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the puzzle path.
        /// </summary>
        /// <value>
        /// The puzzle path.
        /// </value>
        public string PuzzlePath
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the solution duration.
        /// </summary>
        /// <value>
        /// The solution duration.
        /// </value>
        public decimal SolutionDuration
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the solution start date.
        /// </summary>
        /// <value>
        /// The solution start date.
        /// </value>
        public DateTime SolutionStartDate
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the difficulty.
        /// </summary>
        /// <value>
        /// The difficulty.
        /// </value>
        public string Difficulty
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the puzzle of the day date.
        /// </summary>
        /// <value>
        /// The puzzle of the day date.
        /// </value>
        public DateTime PuzzleOfTheDayDate
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the member path.
        /// </summary>
        /// <value>
        /// The member path.
        /// </value>
        public string MemberPath
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the solution id.
        /// </summary>
        /// <value>
        /// The solution id.
        /// </value>
        public int SolutionId
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the note.
        /// </summary>
        /// <value>
        /// The note.
        /// </value>
        public string Note
        {
            get;
            set;
        }
        #endregion Properties

    } // Class
} // Namespace