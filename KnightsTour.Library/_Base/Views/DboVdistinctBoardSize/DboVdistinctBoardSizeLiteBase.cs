// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 26, 2023 9:31:46 AM
// File             : DboVDistinctBoardSizeLiteBase.cs
// ************************************************************************

using System;
using System.Data;

namespace KnightsTour
{
    /// <summary>
    /// The DboVDistinctBoardSizeBase class which is the single place which defines the view properties. />
    /// Generated On: October 26, 2023 at 9:31:46 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref="DboVDistinctBoardSize" />.
    /// </remarks>
    public abstract class DboVDistinctBoardSizeBase
    {
        #region Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="DboVDistinctBoardSizeBase"/> class.
        /// Initializes a new instance of the <see cref="DboVDistinctBoardSizeBase"/> class initialized with default properties.
        /// </summary>
        public DboVDistinctBoardSizeBase() : base()
        {
            // View properties.
            ColDimension = 0;
            RowDimension = 0;
            Value = string.Empty;
            PuzzleCount = 0;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVDistinctBoardSizeBase"/> class.
        /// Initializes a new empty instance of the DboVDistinctBoardSizeBase class from a DataRow with the DboVDistinctBoardSize view columns specified.
        /// </summary>
        /// <param name="record">A <see cref="DataRow"/>.</param>
        public DboVDistinctBoardSizeBase(DataRow record)
        {
            if (record != null)
            {
                ColDimension = record.ValueAs<int>("ColDimension");
                RowDimension = record.ValueAs<int>("RowDimension");
                Value = record.ValueAs<string>("Value");
                PuzzleCount = record.ValueAs<int>("PuzzleCount");
            }
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVDistinctBoardSizeBase"/> class.
        /// Initializes a new empty instance of the DboVDistinctBoardSizeBase class from the record in a data reader populating only the DboVDistinctBoardSize columns specified.
        /// </summary>
        /// <param name="record">A record returned from a database reader.</param>
        public DboVDistinctBoardSizeBase(IDataRecord record)
        {
            if (record != null)
            {
                ColDimension = record.ValueAs<int>("ColDimension");
                RowDimension = record.ValueAs<int>("RowDimension");
                Value = record.ValueAs<string>("Value");
                PuzzleCount = record.ValueAs<int>("PuzzleCount");
            }
        }
        #endregion Constructor(s)

        #region Properties

        /// <summary>
        /// Gets or sets the col dimension.
        /// </summary>
        /// <value>
        /// The col dimension.
        /// </value>
        public int ColDimension
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the row dimension.
        /// </summary>
        /// <value>
        /// The row dimension.
        /// </value>
        public int RowDimension
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        /// <value>
        /// The value.
        /// </value>
        public string Value
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the puzzle count.
        /// </summary>
        /// <value>
        /// The puzzle count.
        /// </value>
        public int PuzzleCount
        {
            get;
            set;
        }
        #endregion Properties

    } // Class
} // Namespace