// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 26, 2023 9:31:46 AM
// File             : DboVMemberStatisticLiteBase.cs
// ************************************************************************

using System;
using System.Data;

namespace KnightsTour
{
    /// <summary>
    /// The DboVMemberStatisticBase class which is the single place which defines the view properties. />
    /// Generated On: October 26, 2023 at 9:31:46 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref="DboVMemberStatistic" />.
    /// </remarks>
    public abstract class DboVMemberStatisticBase
    {
        #region Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="DboVMemberStatisticBase"/> class.
        /// Initializes a new instance of the <see cref="DboVMemberStatisticBase"/> class initialized with default properties.
        /// </summary>
        public DboVMemberStatisticBase() : base()
        {
            // View properties.
            MemberId = 0;
            CreateDate = DateTime.Now;
            UserInitials = string.Empty;
            TotalLogins = 0;
            TotalAttempted = 0;
            TotalCompleted = 0;
            TotalDailyAttempted = 0;
            TotalDailyCompleted = 0;
            FastestBeginnerTime = 0M;
            LongestBeginnerTime = 0M;
            AverageBeginnerTime = 0M;
            TotalBeginnerCompleted = 0;
            TotalBeginnerAttempted = 0;
            FastestEasyTime = 0M;
            LongestEasyTime = 0M;
            AverageEasyTime = 0M;
            TotalEasyCompleted = 0;
            TotalEasyAttempted = 0;
            FastestMediumTime = 0M;
            LongestMediumTime = 0M;
            AverageMediumTime = 0M;
            TotalMediumCompleted = 0;
            TotalMediumAttempted = 0;
            FastestHardTime = 0M;
            LongestHardTime = 0M;
            AverageHardTime = 0M;
            TotalHardCompleted = 0;
            TotalHardAttempted = 0;
            FastestChallengingTime = 0M;
            LongestChallengingTime = 0M;
            AverageChallengingTime = 0M;
            TotalChallengingCompleted = 0;
            TotalChallengingAttempted = 0;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVMemberStatisticBase"/> class.
        /// Initializes a new empty instance of the DboVMemberStatisticBase class from a DataRow with the DboVMemberStatistic view columns specified.
        /// </summary>
        /// <param name="record">A <see cref="DataRow"/>.</param>
        public DboVMemberStatisticBase(DataRow record)
        {
            if (record != null)
            {
                MemberId = record.ValueAs<int>("MemberId");
                CreateDate = record.ValueAs<DateTime>("CreateDate");
                UserInitials = record.ValueAs<string>("UserInitials");
                TotalLogins = record.ValueAs<int>("TotalLogins");
                TotalAttempted = record.ValueAs<int>("TotalAttempted");
                TotalCompleted = record.ValueAs<int>("TotalCompleted");
                TotalDailyAttempted = record.ValueAs<int>("TotalDailyAttempted");
                TotalDailyCompleted = record.ValueAs<int>("TotalDailyCompleted");
                FastestBeginnerTime = record.ValueAs<decimal>("FastestBeginnerTime");
                LongestBeginnerTime = record.ValueAs<decimal>("LongestBeginnerTime");
                AverageBeginnerTime = record.ValueAs<decimal>("AverageBeginnerTime");
                TotalBeginnerCompleted = record.ValueAs<int>("TotalBeginnerCompleted");
                TotalBeginnerAttempted = record.ValueAs<int>("TotalBeginnerAttempted");
                FastestEasyTime = record.ValueAs<decimal>("FastestEasyTime");
                LongestEasyTime = record.ValueAs<decimal>("LongestEasyTime");
                AverageEasyTime = record.ValueAs<decimal>("AverageEasyTime");
                TotalEasyCompleted = record.ValueAs<int>("TotalEasyCompleted");
                TotalEasyAttempted = record.ValueAs<int>("TotalEasyAttempted");
                FastestMediumTime = record.ValueAs<decimal>("FastestMediumTime");
                LongestMediumTime = record.ValueAs<decimal>("LongestMediumTime");
                AverageMediumTime = record.ValueAs<decimal>("AverageMediumTime");
                TotalMediumCompleted = record.ValueAs<int>("TotalMediumCompleted");
                TotalMediumAttempted = record.ValueAs<int>("TotalMediumAttempted");
                FastestHardTime = record.ValueAs<decimal>("FastestHardTime");
                LongestHardTime = record.ValueAs<decimal>("LongestHardTime");
                AverageHardTime = record.ValueAs<decimal>("AverageHardTime");
                TotalHardCompleted = record.ValueAs<int>("TotalHardCompleted");
                TotalHardAttempted = record.ValueAs<int>("TotalHardAttempted");
                FastestChallengingTime = record.ValueAs<decimal>("FastestChallengingTime");
                LongestChallengingTime = record.ValueAs<decimal>("LongestChallengingTime");
                AverageChallengingTime = record.ValueAs<decimal>("AverageChallengingTime");
                TotalChallengingCompleted = record.ValueAs<int>("TotalChallengingCompleted");
                TotalChallengingAttempted = record.ValueAs<int>("TotalChallengingAttempted");
            }
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVMemberStatisticBase"/> class.
        /// Initializes a new empty instance of the DboVMemberStatisticBase class from the record in a data reader populating only the DboVMemberStatistic columns specified.
        /// </summary>
        /// <param name="record">A record returned from a database reader.</param>
        public DboVMemberStatisticBase(IDataRecord record)
        {
            if (record != null)
            {
                MemberId = record.ValueAs<int>("MemberId");
                CreateDate = record.ValueAs<DateTime>("CreateDate");
                UserInitials = record.ValueAs<string>("UserInitials");
                TotalLogins = record.ValueAs<int>("TotalLogins");
                TotalAttempted = record.ValueAs<int>("TotalAttempted");
                TotalCompleted = record.ValueAs<int>("TotalCompleted");
                TotalDailyAttempted = record.ValueAs<int>("TotalDailyAttempted");
                TotalDailyCompleted = record.ValueAs<int>("TotalDailyCompleted");
                FastestBeginnerTime = record.ValueAs<decimal>("FastestBeginnerTime");
                LongestBeginnerTime = record.ValueAs<decimal>("LongestBeginnerTime");
                AverageBeginnerTime = record.ValueAs<decimal>("AverageBeginnerTime");
                TotalBeginnerCompleted = record.ValueAs<int>("TotalBeginnerCompleted");
                TotalBeginnerAttempted = record.ValueAs<int>("TotalBeginnerAttempted");
                FastestEasyTime = record.ValueAs<decimal>("FastestEasyTime");
                LongestEasyTime = record.ValueAs<decimal>("LongestEasyTime");
                AverageEasyTime = record.ValueAs<decimal>("AverageEasyTime");
                TotalEasyCompleted = record.ValueAs<int>("TotalEasyCompleted");
                TotalEasyAttempted = record.ValueAs<int>("TotalEasyAttempted");
                FastestMediumTime = record.ValueAs<decimal>("FastestMediumTime");
                LongestMediumTime = record.ValueAs<decimal>("LongestMediumTime");
                AverageMediumTime = record.ValueAs<decimal>("AverageMediumTime");
                TotalMediumCompleted = record.ValueAs<int>("TotalMediumCompleted");
                TotalMediumAttempted = record.ValueAs<int>("TotalMediumAttempted");
                FastestHardTime = record.ValueAs<decimal>("FastestHardTime");
                LongestHardTime = record.ValueAs<decimal>("LongestHardTime");
                AverageHardTime = record.ValueAs<decimal>("AverageHardTime");
                TotalHardCompleted = record.ValueAs<int>("TotalHardCompleted");
                TotalHardAttempted = record.ValueAs<int>("TotalHardAttempted");
                FastestChallengingTime = record.ValueAs<decimal>("FastestChallengingTime");
                LongestChallengingTime = record.ValueAs<decimal>("LongestChallengingTime");
                AverageChallengingTime = record.ValueAs<decimal>("AverageChallengingTime");
                TotalChallengingCompleted = record.ValueAs<int>("TotalChallengingCompleted");
                TotalChallengingAttempted = record.ValueAs<int>("TotalChallengingAttempted");
            }
        }
        #endregion Constructor(s)

        #region Properties

        /// <summary>
        /// Gets or sets the member id.
        /// </summary>
        /// <value>
        /// The member id.
        /// </value>
        public int MemberId
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the create date.
        /// </summary>
        /// <value>
        /// The create date.
        /// </value>
        public DateTime CreateDate
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the user initials.
        /// </summary>
        /// <value>
        /// The user initials.
        /// </value>
        public string UserInitials
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total logins.
        /// </summary>
        /// <value>
        /// The total logins.
        /// </value>
        public int TotalLogins
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total attempted.
        /// </summary>
        /// <value>
        /// The total attempted.
        /// </value>
        public int TotalAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total completed.
        /// </summary>
        /// <value>
        /// The total completed.
        /// </value>
        public int TotalCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total daily attempted.
        /// </summary>
        /// <value>
        /// The total daily attempted.
        /// </value>
        public int TotalDailyAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total daily completed.
        /// </summary>
        /// <value>
        /// The total daily completed.
        /// </value>
        public int TotalDailyCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the fastest beginner time.
        /// </summary>
        /// <value>
        /// The fastest beginner time.
        /// </value>
        public decimal FastestBeginnerTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the longest beginner time.
        /// </summary>
        /// <value>
        /// The longest beginner time.
        /// </value>
        public decimal LongestBeginnerTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the average beginner time.
        /// </summary>
        /// <value>
        /// The average beginner time.
        /// </value>
        public decimal AverageBeginnerTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total beginner completed.
        /// </summary>
        /// <value>
        /// The total beginner completed.
        /// </value>
        public int TotalBeginnerCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total beginner attempted.
        /// </summary>
        /// <value>
        /// The total beginner attempted.
        /// </value>
        public int TotalBeginnerAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the fastest easy time.
        /// </summary>
        /// <value>
        /// The fastest easy time.
        /// </value>
        public decimal FastestEasyTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the longest easy time.
        /// </summary>
        /// <value>
        /// The longest easy time.
        /// </value>
        public decimal LongestEasyTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the average easy time.
        /// </summary>
        /// <value>
        /// The average easy time.
        /// </value>
        public decimal AverageEasyTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total easy completed.
        /// </summary>
        /// <value>
        /// The total easy completed.
        /// </value>
        public int TotalEasyCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total easy attempted.
        /// </summary>
        /// <value>
        /// The total easy attempted.
        /// </value>
        public int TotalEasyAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the fastest medium time.
        /// </summary>
        /// <value>
        /// The fastest medium time.
        /// </value>
        public decimal FastestMediumTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the longest medium time.
        /// </summary>
        /// <value>
        /// The longest medium time.
        /// </value>
        public decimal LongestMediumTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the average medium time.
        /// </summary>
        /// <value>
        /// The average medium time.
        /// </value>
        public decimal AverageMediumTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total medium completed.
        /// </summary>
        /// <value>
        /// The total medium completed.
        /// </value>
        public int TotalMediumCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total medium attempted.
        /// </summary>
        /// <value>
        /// The total medium attempted.
        /// </value>
        public int TotalMediumAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the fastest hard time.
        /// </summary>
        /// <value>
        /// The fastest hard time.
        /// </value>
        public decimal FastestHardTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the longest hard time.
        /// </summary>
        /// <value>
        /// The longest hard time.
        /// </value>
        public decimal LongestHardTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the average hard time.
        /// </summary>
        /// <value>
        /// The average hard time.
        /// </value>
        public decimal AverageHardTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total hard completed.
        /// </summary>
        /// <value>
        /// The total hard completed.
        /// </value>
        public int TotalHardCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total hard attempted.
        /// </summary>
        /// <value>
        /// The total hard attempted.
        /// </value>
        public int TotalHardAttempted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the fastest challenging time.
        /// </summary>
        /// <value>
        /// The fastest challenging time.
        /// </value>
        public decimal FastestChallengingTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the longest challenging time.
        /// </summary>
        /// <value>
        /// The longest challenging time.
        /// </value>
        public decimal LongestChallengingTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the average challenging time.
        /// </summary>
        /// <value>
        /// The average challenging time.
        /// </value>
        public decimal AverageChallengingTime
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total challenging completed.
        /// </summary>
        /// <value>
        /// The total challenging completed.
        /// </value>
        public int TotalChallengingCompleted
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the total challenging attempted.
        /// </summary>
        /// <value>
        /// The total challenging attempted.
        /// </value>
        public int TotalChallengingAttempted
        {
            get;
            set;
        }
        #endregion Properties

    } // Class
} // Namespace