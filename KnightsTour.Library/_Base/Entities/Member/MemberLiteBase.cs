// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 21, 2023 9:55:34 AM
// File             : MemberLiteBase.cs
// ************************************************************************

using System;
using System.Xml;

namespace KnightsTour
{
    /// <summary>
    /// The MemberLiteBase class which is the single place which defines the properties.  Inherits <seealso cref="KnightsTour.CoreLibrary.EntityBase{T}" />
    /// Generated On: October 21, 2023 at 9:55:34 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// This class should NOT be modified - any extensions or overrides should be completed in the extended class <seealso cref="MemberLite" />.
    /// </remarks>
    public abstract class MemberLiteBase : KnightsTour.CoreLibrary.EntityBase<int?>
    {
        #region Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="MemberLiteBase"/> class.
        /// Initializes a new instance of the <see cref="MemberLiteBase"/> class.
        /// </summary>
        public MemberLiteBase()
        {
            OnIdSet += MemberLiteBase_OnIdSet;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="MemberLiteBase"/> class.
        /// Initializes a new instance of the <see cref="MemberLite"/> class from its full class representation.
        /// </summary>
        /// <param name="memberBase">The <see cref="MemberBase"/>.</param>
        public MemberLiteBase(MemberBase memberBase)
        {
            // Only do this if the object exists.
            if (memberBase != null)
            {
                OnIdSet += MemberLiteBase_OnIdSet;
                MemberId = memberBase.MemberId;
                CreateDate = memberBase.CreateDate;
                EmailAddress = memberBase.EmailAddress;
                ConfirmationDate = memberBase.ConfirmationDate;
                DisplayName = memberBase.DisplayName;
                Password = memberBase.Password;
                UserInitials = memberBase.UserInitials;
                Code = memberBase.Code;
                IsAdministrator = memberBase.IsAdministrator;

                // Also set the Id field.
                Id = this.MemberId;
            }
        }
        #endregion Constructor(s)

        #region Properties

        /// <summary>
        /// Gets or sets the primary key field member id.
        /// </summary>
        /// <value>
        /// The member id.
        /// </value>
        public int? MemberId
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the create date.
        /// </summary>
        /// <value>
        /// The create date.
        /// </value>
        public DateTime CreateDate
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the email address.
        /// </summary>
        /// <value>
        /// The email address.
        /// </value>
        public string EmailAddress
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the confirmation date.
        /// </summary>
        /// <value>
        /// The confirmation date.
        /// </value>
        public DateTime? ConfirmationDate
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the display name.
        /// </summary>
        /// <value>
        /// The display name.
        /// </value>
        public string DisplayName
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        /// <value>
        /// The password.
        /// </value>
        public string Password
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the user initials.
        /// </summary>
        /// <value>
        /// The user initials.
        /// </value>
        public string UserInitials
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the code.
        /// </summary>
        /// <value>
        /// The code.
        /// </value>
        public string Code
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the is administrator.
        /// </summary>
        /// <value>
        /// The is administrator.
        /// </value>
        public bool IsAdministrator
        {
            get;
            set;
        }
        #endregion Properties

        #region Methods

        /// <summary>
        /// Invoked when the generic Id field of this class is modified (set).
        /// </summary>
        private void MemberLiteBase_OnIdSet()
        {
            MemberId = Id;
        }
        #endregion Methods

    } // Class
} // Namespace