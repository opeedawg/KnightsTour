// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 14, 2023 11:16:29 AM
// File             : DboVpuzzleOfTheDaySolution.cs
// ************************************************************************

using System;
using System.Collections.Generic;
using System.Data;

namespace KnightsTour
{
    /// <summary>
    /// The extended DboVpuzzleOfTheDaySolution object.
    /// Generated On: October 14, 2023 at 11:16:29 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// Feel free to add properties as you see fit here.
    /// </remarks>
    public class DboVPuzzleOfTheDaySolution : DboVPuzzleOfTheDaySolutionBase
    {
        #region Extended Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolution"/> class.
        /// Initializes a new empty instance of the DboVpuzzleOfTheDaySolution class.
        /// </summary>
        /// <example>
        /// <code>
        /// DboVpuzzleOfTheDaySolution dboVpuzzleOfTheDaySolution = new DboVpuzzleOfTheDaySolution();
        /// </code>
        /// </example>
        public DboVPuzzleOfTheDaySolution() : base()
        {
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolution"/> class.
        /// Initializes a new empty instance of the DboVpuzzleOfTheDaySolution class from the record in a data reader.
        /// </summary>
        /// <param name="record">A record returned from a database reader.</param>
        public DboVPuzzleOfTheDaySolution(IDataRecord record) : base(record)
        {
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="DboVPuzzleOfTheDaySolution"/> class.
        /// Initializes a new empty instance of the DboVpuzzleOfTheDaySolution class from a DataRow (via a <see cref="DataTable" /> usually part of a larger <see cref="DataSet" />).
        /// </summary>
        /// <param name="record">The <see cref="DataRow" />.</param>
        public DboVPuzzleOfTheDaySolution(DataRow record) : base(record)
        {
        }
        #endregion Extended Constructor(s)

        #region Extended Declarations
        #endregion Extended Declarations

        #region Extended Properties
        public string SolutionStartDateFormatted 
        {
            get 
            {
                return SolutionStartDate.ToString("dddd MMMM dd yyyy");
            }
        }
        public string SolutionDurationFormatted
        {
            get
            {
                if (SolutionDuration < 60)
                    return $"{SolutionDuration} seconds";
                else
                    return $"{SolutionDuration / 60} minutes and {SolutionDuration % 60} seconds";
            }
        }
        public List<List<int>> MemberCells
        {
            get
            {
                List<List<int>> cells = new List<List<int>>();
                if (!string.IsNullOrEmpty(MemberPath))
                {
                    cells = Newtonsoft.Json.JsonConvert.DeserializeObject<List<List<int>>>(MemberPath.Split(':')[1].Replace("}", ""));
                }

                return cells;
            }
        }
        #endregion Extended Properties

        #region Extended Methods
        #endregion Extended Methods

    } // Class
} // Namespace