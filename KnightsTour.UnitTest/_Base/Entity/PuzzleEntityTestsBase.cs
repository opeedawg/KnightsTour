// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : March 19, 2023 7:56:06 AM
// File             : PuzzleEntityTestsBase.cs
// ************************************************************************

using System;

using KnightsTour;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace KnightsTourUnitTests.Entity
{
    /// <summary>
    /// Tests against the Puzzle Entity.  Inherits <seealso cref="BaseDataTest" />
    /// Generated On: March 19, 2023 at 7:56:06 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// </remarks>
    [TestClass]
    public class PuzzleEntityTestsBase : DataTestBase<int?>
    {
        #region Puzzle entity tests Methods

        /// <summary>
        /// Description for Puzzle_ Constructor.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor()
        {
            Entity_Constructor<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Constructor_ Id.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor_Id()
        {
            Entity_Constructor_Id<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Constructor_ I Data Record.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor_IDataRecord()
        {
            Entity_Constructor_IDataRecord<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Constructor_ Data Row.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor_DataRow()
        {
            Entity_Constructor_DataRow<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Constructor_ Lite.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor_Lite()
        {
            Entity_Constructor_Lite<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Constructor_ Dynamic.
        /// </summary>
        [TestMethod]
        public void Puzzle_Constructor_Dynamic()
        {
            Entity_Constructor_Dynamic<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Clone.
        /// </summary>
        [TestMethod]
        public void Puzzle_Clone()
        {
            Entity_Clone<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ To String.
        /// </summary>
        [TestMethod]
        public void Puzzle_ToString()
        {
            Entity_ToString<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Is Modified.
        /// </summary>
        [TestMethod]
        public void Puzzle_IsModified()
        {
            Entity_IsModified<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Lite_ Constructor.
        /// </summary>
        [TestMethod]
        public void Puzzle_Lite_Constructor()
        {
            Entity_Lite_Constructor<KnightsTour.Puzzle, KnightsTour.PuzzleLite>();
        }

        /// <summary>
        /// Description for Puzzle_ Is Modified Property.
        /// </summary>
        [TestMethod]
        public void Puzzle_IsModifiedProperty()
        {
            // Parameter 1: The related Properties.
            // Parameter 2: an object[] of 2 KnightsTour.PuzzleProperties.
            // The first MUST BE the primary key field property.
            // The second can be anything BUT the primary key field property.
            Entity_IsModifiedProperty<KnightsTour.Puzzle, KnightsTour.PuzzleLite>(
                typeof(KnightsTour.Enumerations.PuzzleProperty),
                new object[] { KnightsTour.Enumerations.PuzzleProperty.PuzzleId, KnightsTour.Enumerations.PuzzleProperty.PuzzleCode }
            );
        }
        #endregion Puzzle entity tests Methods

    } // Class
} // Namespace