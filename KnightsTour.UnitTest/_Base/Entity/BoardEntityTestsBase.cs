// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : March 19, 2023 7:56:06 AM
// File             : BoardEntityTestsBase.cs
// ************************************************************************

using System;

using KnightsTour;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace KnightsTourUnitTests.Entity
{
    /// <summary>
    /// Tests against the Board Entity.  Inherits <seealso cref="BaseDataTest" />
    /// Generated On: March 19, 2023 at 7:56:06 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    /// <remarks>
    /// This class will be regenerated when requested to stay in sync with your model.
    /// </remarks>
    [TestClass]
    public class BoardEntityTestsBase : DataTestBase<int?>
    {
        #region Board entity tests Methods

        /// <summary>
        /// Description for Board_ Constructor.
        /// </summary>
        [TestMethod]
        public void Board_Constructor()
        {
            Entity_Constructor<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Constructor_ Id.
        /// </summary>
        [TestMethod]
        public void Board_Constructor_Id()
        {
            Entity_Constructor_Id<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Constructor_ I Data Record.
        /// </summary>
        [TestMethod]
        public void Board_Constructor_IDataRecord()
        {
            Entity_Constructor_IDataRecord<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Constructor_ Data Row.
        /// </summary>
        [TestMethod]
        public void Board_Constructor_DataRow()
        {
            Entity_Constructor_DataRow<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Constructor_ Lite.
        /// </summary>
        [TestMethod]
        public void Board_Constructor_Lite()
        {
            Entity_Constructor_Lite<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Constructor_ Dynamic.
        /// </summary>
        [TestMethod]
        public void Board_Constructor_Dynamic()
        {
            Entity_Constructor_Dynamic<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Clone.
        /// </summary>
        [TestMethod]
        public void Board_Clone()
        {
            Entity_Clone<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ To String.
        /// </summary>
        [TestMethod]
        public void Board_ToString()
        {
            Entity_ToString<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Is Modified.
        /// </summary>
        [TestMethod]
        public void Board_IsModified()
        {
            Entity_IsModified<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Lite_ Constructor.
        /// </summary>
        [TestMethod]
        public void Board_Lite_Constructor()
        {
            Entity_Lite_Constructor<KnightsTour.Board, KnightsTour.BoardLite>();
        }

        /// <summary>
        /// Description for Board_ Is Modified Property.
        /// </summary>
        [TestMethod]
        public void Board_IsModifiedProperty()
        {
            // Parameter 1: The related Properties.
            // Parameter 2: an object[] of 2 KnightsTour.BoardProperties.
            // The first MUST BE the primary key field property.
            // The second can be anything BUT the primary key field property.
            Entity_IsModifiedProperty<KnightsTour.Board, KnightsTour.BoardLite>(
                typeof(KnightsTour.Enumerations.BoardProperty),
                new object[] { KnightsTour.Enumerations.BoardProperty.BoardId, KnightsTour.Enumerations.BoardProperty.BoardCode }
            );
        }
        #endregion Board entity tests Methods

    } // Class
} // Namespace