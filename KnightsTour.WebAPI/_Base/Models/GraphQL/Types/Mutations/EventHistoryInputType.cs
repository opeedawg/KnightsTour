// Â© 2023 27 Software
//
// ************************************************************************
// Author           : DXterity8 Version 8.6
// Created          : October 21, 2023 9:45:26 AM
// File             : EventHistoryInputType.cs
// ************************************************************************

using GraphQL.Types;

namespace WebAPI.GraphQL.Types
{
    /// <summary>
    /// Graph QL input model mapping for event history.
    /// Generated On: October 21, 2023 at 9:45:26 AM by DXterity Solutions.
    /// Generated By: DXterity8 Version 8.6.0 (see https://dxteritysolutions.com/).
    /// </summary>
    public class EventHistoryInputType : InputObjectGraphType<KnightsTour.EventHistoryLite>
    {
        #region Constructor(s)

        /// <summary>
        /// Initializes a new instance of the <see cref="EventHistoryInputType"/> class.
        /// Type configuration for access to the EventHistory entity.
        /// </summary>
        /// <param name="data">The data model assiciated with the GraphQL Schema.</param>
        public EventHistoryInputType(KnightsTourData data)
        {
            Name = "EventHistoryInput";

            // EventHistory property mapping.
            Field(x => x.Id, nullable: true).Description("The unique primary key accessor of the event history.");
            Field(x => x.EventHistoryId, nullable: true).Description("The primary key of the event history.");
            Field(x => x.EventTypeId, nullable: true).Description("The associated event type id to the event history.");
            Field(x => x.EventDate).Description("The event date of the event history.");
            Field(x => x.SourceInternetAddress).Description("The source internet address of the event history.");
            Field(x => x.Country, nullable: true).Description("The country of the event history.");
            Field(x => x.Region, nullable: true).Description("The region of the event history.");
            Field(x => x.City, nullable: true).Description("The city of the event history.");
            Field(x => x.ZipPostal, nullable: true).Description("The zip postal of the event history.");
            Field(x => x.Context).Description("The context of the event history.");
            Field(x => x.MemberId, nullable: true).Description("The associated member id to the event history.");
        }
        #endregion Constructor(s)

    } // Class
} // Namespace